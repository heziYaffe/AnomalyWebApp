{"version":3,"sources":["components/FileDrop.js","components/clickModel.js","components/TestDisplay.js","components/Button.js","components/AddModel.js","components/Model.js","components/Models.js","components/SubMaster.js","components/Dropdown.js","components/DynamicChart.js","components/DataTable.js","components/Anomaly.js","components/Anomalies.js","App.js","reportWebVitals.js","index.js"],"names":["FileDrop","addFile","showB","closeA","className","onDrop","acceptedFiles","handleOnDrop","getRootProps","getInputProps","ClickModel","model","testModel","showTD","activateAnomalies","onClick","e","then","value","Name","type","is_Ready","toString","TestDisplay","models","map","index","Button","text","setActiveButton","name","showAD","console","log","AddModel","addModel","useState","modelName","setModelName","modelType","setModelType","onSubmit","preventDefault","ID","Math","floor","random","id","alert","placeholder","onChange","event","target","Model","Models","SubMaster","activeButton","setButton","showTestDisplay","setShowTestDisplay","showAddModel","setShowAddModel","showButtons","setShowButtons","string","flag","useEffect","Navbar","props","children","NavItem","open","setOpen","href","icon","DropdownMenu","getDataColumns","dataARRColumns","DropdownItem","dataColumns","setDataColumns","graphData","setGraphData","dataARRColumn","createDataLists","length","DataLists","forEach","dataColumn","DataList","createDataList","push","XVals","YVals","count","XVal","x","y","addGraphData","Dropdown","showChartButton","setShowChartButton","setDataARRColumns","Object","keys","readyData","dataCS","ArrColumnKeyVals","dataC","DynamicChart","displayGraphData","dataToShow","undefined","Multiple","element","findMinMax","minX","maxX","maxY","XARR","YARR","el","max","min","ScatterChart","width","height","margin","top","right","bottom","left","CartesianGrid","style","color","XAxis","dataKey","unit","domain","YAxis","ZAxis","range","Tooltip","cursor","strokeDasharray","Legend","Scatter","data","fill","line","shape","DataTable","dataTableObjects","setDataTableObjects","columnTableObjects","setcolumnTableObjects","columnDataArr","entries","title","field","pop","createColumnDataObj","dataTableArr","TimeStepArr","dataObj","Attribute","val","createDataTableObj","result","makeTimeSteps","attribute","columns","Anomaly","anomalyReport","description","anomalyStart","anomalyEnd","Anomalies","anomalyReports","App","setModels","setFile","dataPoints","setDataPoints","setDisplayGraphData","setAnomalyReports","showAnomalies","setShowAnomalies","a","fetchModels","modelsFromServer","getModels","parseByColumn","dataColumnArray","item","obj","reduce","o","key","fetch","res","json","predict_data","options","method","headers","body","JSON","stringify","train_data","file","reader","FileReader","readAsText","onload","parse","header","anomalyArr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5d3a4c9.chunk.js","sourcesContent":["\r\nimport React, {Component} from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport './FDD.css';\r\n\r\n\r\n\r\n\r\n/* A FileDrop component which allow users to drop files into it to be then parsed and then\r\nuploaded  */\r\nfunction FileDrop({addFile,showB,closeA}) {\r\n\r\n    const handleOnDrop = (acceptedFiles) => {  \r\n        \r\n       \r\n        addFile(acceptedFiles);\r\n        showB(true);\r\n        closeA();\r\n    }\r\n\r\n    return (\r\n        <div className = \"FileDropContainer\">\r\n            <Dropzone className= \"FileDrop\" onDrop={acceptedFiles => handleOnDrop(acceptedFiles)}>\r\n                {({getRootProps, getInputProps}) => (\r\n                    <section>\r\n                    <div {...getRootProps()}>\r\n                        <input {...getInputProps()} />\r\n                        <p>Drag 'n' drop some files here, or click to select files</p>\r\n                    </div>\r\n                    </section>\r\n                )}\r\n                </Dropzone>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileDrop;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n   \r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\n/* A Component which allows when user clicks on given model to know \r\nthat that model what chosen so we can then test the data set uploaded from \r\nthe users input */\r\nfunction ClickModel({model,testModel,showTD,activateAnomalies}) {\r\n   \r\n    const onClick = (e) => {   \r\n        testModel(model).then((value)=>{activateAnomalies(value)});\r\n        showTD(false);     \r\n    }\r\n    return (\r\n        <div onClick={onClick}>\r\n            <h4>{\"Name: \"}{model.Name}</h4>\r\n            <p>{\"Type: \"}{model.type}</p>\r\n            <p>{\"Ready To Use: \"}{model.is_Ready.toString()}</p>       \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClickModel;","\r\n\r\nimport React from 'react';\r\nimport ClickModel from './clickModel';\r\n\r\n\r\n\r\n\r\n/* A Component which displays all Models currently trained in the system */\r\nconst TestDisplay = ({models,testModel,showTD,activateAnomalies}) => {\r\n    return (\r\n        <div className =\"TestModelContainer\" >\r\n            {models.map((model,index)=>\r\n            <ClickModel key={index} model= {model} testModel={testModel} showTD ={showTD}  activateAnomalies ={activateAnomalies}/>)}                                                  \r\n        </div>\r\n    );\r\n    \r\n};\r\nexport default TestDisplay;","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\n/* A Component which is a Button either Test or Train  */\r\nconst Button = ({text,type,setActiveButton,name,showTD,showAD}) => {\r\n\r\n    const onClick = (e) => {\r\n        console.log(type);   \r\n        setActiveButton(type);\r\n        if(type === 'Train'){showTD(false);showAD(true)};\r\n        if(type === 'Test'){showAD(false);showTD(true)};\r\n        \r\n                   }\r\n    \r\n    return (\r\n        <div>\r\n         <button className={name} onClick={onClick}>{text}</button>\r\n\r\n        </div> \r\n    );\r\n};\r\n\r\nexport default Button;","\r\n// Basic Input modal gets sent function which changes state of usestate at top \r\n//\r\nimport React from 'react';\r\nimport {useState} from 'react';\r\n\r\n\r\n\r\n/* A Input Component which allows user to enter new models to be used   */\r\nconst  AddModel = ({addModel,showAD}) => {\r\n\r\n    const [modelName,setModelName] = useState('');\r\n    const [modelType,setModelType] = useState('');\r\n\r\n\r\n    const onChangeName = (event) => {\r\n        setModelName(event.target.value);}\r\n\r\n    const onChangeType = (event) => {\r\n        setModelType(event.target.value);}  \r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(!modelName){\r\n            alert('Please Add A Name')\r\n            return;\r\n        }\r\n\r\n        if(modelType!= \"Linear\" && modelType!=\"NonLinear\"){\r\n            alert('Invalid Model Type.Current Models in System : Linear , NonLinear')\r\n            return;\r\n        }\r\n        const ID = Math.floor(Math.random()*100000)+1;\r\n        addModel({id:ID,Name:modelName,is_Ready:false,type:modelType})\r\n        setModelName('');\r\n        setModelType('');\r\n        showAD(false);\r\n    }\r\n\r\n    return (\r\n            <form className='add-form' onSubmit = {onSubmit}>\r\n              <div className='form-control'>   \r\n                 <label>Model Name</label>\r\n                 <input className=\"ModelName\" type='text' placeholder='Add Model Name' value={modelName} onChange={onChangeName}/>\r\n              </div>\r\n              <div className='form-control'>\r\n                 <label>Model Type</label>\r\n                 <input   className=\"ModelType\" type='text' placeholder='Add Model Type' value={modelType} onChange={onChangeType}/>  \r\n              </div>\r\n              <input className=\"SaveButton\" type='submit' value='Save Model' />\r\n            </form>\r\n        \r\n    );\r\n}\r\n\r\nexport default AddModel;","import React from 'react';\r\n\r\n\r\n/* A Component which shows information for Model */\r\nconst Model = ({model}) => {\r\n    return (\r\n        <div  className =\"Model\">\r\n            <h4>{`Name:  ${model.Name}`}</h4>\r\n            <p>{`Type:  ${model.type} `}</p>\r\n            <p>{`Ready To Use: ${(model.is_Ready.toString())}`}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Model;","import React from 'react';\r\nimport Model from './Model'\r\n\r\n\r\n/* A Component which shows all Models currently in system */\r\nconst Models = ({models}) => {\r\n\r\n    return (\r\n        <div className=\"ModelList\">\r\n            {models.map((model,index)=>\r\n                <Model key={index} model= {model} />)}              \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Models;","import React from 'react';\r\nimport FileDrop from './FileDrop'\r\nimport TestDisplay from './TestDisplay'\r\nimport {useState, useEffect} from 'react'\r\nimport Button from './Button'\r\nimport AddModel from './AddModel';\r\nimport Models from './Models'\r\nimport './FDD.css';\r\nimport \"./SubMaster.css\";\r\n\r\n\r\n\r\n\r\n\r\n/* A Component which acts as a holder and controller  of all other components asscociated with user input \r\nof event change through putting in file till any event associated with that file barring \r\nevents asscociated wit data table or dynamic graph  */\r\nfunction SubMaster({models,addModel,addFile,testModel, activateAnomalies,closeA}) {\r\n\r\n\r\n \r\n    const [activeButton,setButton] = useState(\"\");\r\n    \r\n    const [showTestDisplay,setShowTestDisplay] = useState(false);\r\n\r\n    const [showAddModel, setShowAddModel] =  useState(false);\r\n     \r\n    const [showButtons, setShowButtons] = useState(false);\r\n    \r\n\r\n\r\n    const setActiveButton = (string) => {setButton(string);console.log(string) }\r\n     \r\n\r\n    const showTD = (flag) => {setShowTestDisplay(flag);showB(false)}\r\n    const showAD = (flag) => {setShowAddModel(flag);showB(false)}\r\n    const showB  =  (flag) => {setShowButtons(flag)}\r\n\r\n    useEffect(() => {\r\n       if(activeButton === \"Train\"){showAD(true);showB(false)}\r\n       if(activeButton === \"Test\"){showTD(true);showB(false)}\r\n    }, [activeButton]);\r\n\r\n\r\n          \r\n    return (\r\n        <div className=\"SubMaster\">\r\n          <div className = \"Models\">\r\n            <Models models={models}/>\r\n          </div>\r\n          <div className=\"AddModel\">\r\n            {showAddModel &&<AddModel addModel = {addModel} showAD = {showAD}/>}\r\n          </div>\r\n          <div className=\"Buttons\">\r\n            {showButtons &&<Button name={'TrainButton'} text={'Train'} type={\"Train\"} setActiveButton={setActiveButton} activeButton={activeButton} showTD={showTD} showAD={showAD}/>}\r\n            {showButtons &&<Button name={'TestButton'} text={'Test'} type={\"Test\"} setActiveButton={setActiveButton} activeButton={activeButton} showTD={showTD} showAD={showAD}/>}\r\n          </div>\r\n          <div className=\"TestDisplay\">\r\n            {showTestDisplay &&<TestDisplay models = {models} testModel = {testModel} showTD = {showTD} activateAnomalies ={activateAnomalies}  />}\r\n          </div>\r\n          <FileDrop activeButton = {activeButton} addFile={addFile} showB = {showB} closeA={closeA} showTD={showTD} activeButton={activeButton}/> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubMaster;","\r\nimport React, {useState,useEffect} from 'react';\r\nimport './Dropdown.css';\r\n\r\n\r\n/* A Component which is a dropdown component we have a number of other components in the\r\nspecific file in short they create a dropdown menu containing all attributes loaded from the \r\nfile when someone clicks on one of these attributes \r\nhe then can see it as function of a graph  */\r\nfunction Dropdown({dataColumns,addGraphData}) {\r\n\r\n    const [showChartButton,setShowChartButton] = useState(false);\r\n    const [dataARRColumns,setDataARRColumns] = useState([]);\r\n\r\n    useEffect( () => {\r\n           \r\n          },[dataARRColumns]);\r\n\r\n    useEffect( () => {\r\n        if(Object.keys(dataColumns).length === 0){return;}  \r\n        readyData(dataColumns);\r\n        setShowChartButton(true);\r\n          },[dataColumns]);\r\n    \r\n    const readyData = (dataCS) =>{\r\n        \r\n        var ArrColumnKeyVals = [];\r\n        for(const dataC in dataCS){\r\n            ArrColumnKeyVals.push([dataC,dataCS[dataC]])\r\n        } \r\n        \r\n        setDataARRColumns(ArrColumnKeyVals);\r\n      };\r\n\r\n    return (\r\n        <>\r\n          <Navbar>\r\n           {showChartButton &&<NavItem icon=\"📈\">\r\n                  <DropdownMenu dataARRColumns={dataARRColumns} addGraphData={addGraphData}/>  \r\n              </NavItem>}     \r\n          </Navbar>\r\n        </>\r\n    );\r\n}\r\n \r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className=\"navbar\">\r\n          <ul className=\"navbar-nav\">{props.children}</ul> \r\n        </nav>\r\n    );\r\n}\r\n\r\n\r\nfunction NavItem(props) {\r\n\r\n\r\n    const [open,setOpen] = useState(false);\r\n    return (\r\n        <li className=\"nav-item\">\r\n           <a href=\"#\" className=\"icon-button\" onClick={() => setOpen(!open)}>\r\n             {props.icon}  \r\n           </a>\r\n           {open && props.children}\r\n        </li>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nfunction DropdownMenu(props) {\r\n\r\n\r\n    const getDataColumns = () => {\r\n          return props.dataARRColumns;\r\n    }\r\n\r\n   \r\n   function DropdownItem(props) {\r\n        const[dataColumns,setDataColumns] = useState([]);\r\n        const[graphData,setGraphData] = useState([]);\r\n\r\n        useEffect( () => {\r\n            \r\n            setDataColumns(props.getDataColumns);\r\n            },[props.dataARRColumn]);\r\n\r\n        useEffect( () => {\r\n            //console.log(props.getDataColumns())\r\n            createDataLists();\r\n            },[dataColumns]);\r\n        \r\n        useEffect( () => {\r\n            if(graphData.length === 0){return;}\r\n            \r\n            },[graphData]);    \r\n    \r\n        const createDataLists =  () => {\r\n            const DataLists = [];\r\n            \r\n            // Build another list which contains the names \r\n            // of the attributes we are plotting for \r\n            // where place 0 is the actual button thats been clikced and \r\n            // all attributes follow in order after \r\n            // for the project we are only plotting for 3 different \r\n            // attributes on the y axis with x axis staying for the specific \r\n            // datacoulmn in the dropdown menu thats been chosen \r\n            \r\n            dataColumns.forEach(dataColumn => {\r\n            if(dataColumn[0] === props.dataARRColumn[0]){return;} \r\n            const DataList = createDataList(props.dataARRColumn[1],dataColumn[1]);\r\n            DataLists.push(DataList);\r\n                      \r\n            });\r\n            setGraphData(DataLists);\r\n            } \r\n\r\n        const createDataList  = (XVals,YVals) => {\r\n            let count = 0;\r\n            var DataList = [];\r\n            XVals.forEach((XVal) => {DataList.push({x:XVal,y:YVals[count]});count++});\r\n            return DataList\r\n        }   \r\n\r\n        return (\r\n            <a href=\"#\" className = \"menu-item\" onClick={()=> {props.addGraphData(graphData)}} >\r\n                {props.dataARRColumn[0]}   {props.icon}\r\n            </a>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"dropdown\">     \r\n            {props.dataARRColumns.map((dataARRColumn,index)=>\r\n               <DropdownItem key={index} icon=\"📈\" dataARRColumn={dataARRColumn} getDataColumns={getDataColumns} addGraphData = {props.addGraphData}/>)}      \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Dropdown;\r\n\r\n\r\n","import React, {useState,useEffect} from 'react';\r\nimport {\r\n    ScatterChart,\r\n    Scatter,\r\n    XAxis,\r\n    YAxis,\r\n    ZAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend\r\n  } from \"recharts\";\r\n\r\n/* A Component which dynamically shows data from attribute clicked on \r\nto be displayed as a chart */\r\n\r\nconst  DynamicChart = ({displayGraphData}) => {\r\n\r\n    \r\n      \r\n  \r\n  \r\n\r\n    \r\n\r\n    useEffect( () => {\r\n\r\n        \r\n        },[displayGraphData]);\r\n\r\n    const dataToShow = (graphData) => {\r\n\r\n          if(graphData == undefined ){return []}\r\n          var Multiple = [];\r\n          var count = 0;\r\n          graphData.forEach(element => {\r\n              \r\n              if(count%100 == 0){Multiple.push(element)}\r\n              count++\r\n            })\r\n            \r\n          \r\n          console.log(Multiple)\r\n          return Multiple\r\n\r\n    }\r\n\r\n\r\n   \r\n    \r\n\r\n    const findMinMax = (graphData) => {\r\n       var minX = 0;\r\n       var maxX; \r\n       var minY;\r\n       var maxY;\r\n       var XARR = [];\r\n       var YARR = []\r\n       dataToShow(graphData).forEach(element => {\r\n            element.forEach((el)=> {\r\n                XARR.push(el.x);\r\n                YARR.push(el.y);   \r\n            })\r\n               \r\n           })\r\n           maxX = Math.max(...XARR);\r\n           minX = Math.min(...XARR);\r\n\r\n           maxY = Math.max(...YARR);\r\n           minY = Math.min(...YARR);\r\n           return [[minX-1,maxX+1],[minY-1,maxY+1]]\r\n       }\r\n\r\n      \r\n\r\n    return (\r\n      <div className=\"GraphContainer\">\r\n        <ScatterChart\r\n        width={800}\r\n        height={400}\r\n        margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\r\n      >\r\n        <CartesianGrid style={{color: \"wheat\"}}/>   \r\n        <XAxis type=\"number\" dataKey={\"x\"} name=\"\" unit=\"\" domain={findMinMax(displayGraphData)[0]}  />\r\n        <YAxis type=\"number\" dataKey={\"y\"} name=\"\" unit=\"\"  domain={findMinMax(displayGraphData)[1]}/>\r\n        <ZAxis range={[50]} />\r\n        <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\r\n        <Legend />\r\n         <Scatter  name=\"Attribute I\" data={dataToShow(displayGraphData[0])} fill=\"blue\" line shape=\"circle\" />\r\n         <Scatter  name=\"Attribute II\" data={dataToShow(displayGraphData[1])} fill=\"purple\" line shape=\"circle\" />\r\n         <Scatter  name=\"Attribute III\" data={dataToShow(displayGraphData[2])} fill=\"orange\" line shape=\"circle\" />\r\n      </ScatterChart>\r\n    </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default DynamicChart;","import React, { useEffect,useState } from 'react';\r\n\r\nimport MaterialTable from 'material-table'\r\n\r\n\r\n\r\n\r\n/* A Component which preps and shows data as a DataTable to the user */\r\nconst DataTable = ({dataColumns}) => {\r\n\r\n    const [dataARRColumns,setDataARRColumns] = useState([]);\r\n    const [dataTableObjects,setDataTableObjects] = useState([]);\r\n    const [columnTableObjects,setcolumnTableObjects] = useState([]);\r\n   \r\n  \r\n    \r\n    const getData = () => {\r\n        const c  = dataTableObjects;\r\n        return c;\r\n    }\r\n\r\n    const getColumn = () => {\r\n        const d =  columnTableObjects;\r\n        return d;\r\n    }\r\n\r\n\r\n    const createDataTableObj = (element,TimeStepArr) => {\r\n        var dataObj = {};\r\n        dataObj.Attribute  = element[0];\r\n        var count = 0;\r\n        TimeStepArr.forEach((val)=>{\r\n            var timestep  = val\r\n            dataObj[`Timestep        ${timestep}`] = element[1][count];\r\n            count++;\r\n        });\r\n        \r\n        return dataObj;\r\n          \r\n    }\r\n    \r\n\r\n    const createColumnDataObj  =  () => {\r\n        var columnDataArr  = [];\r\n        Object.entries(dataTableObjects[0]).map(element => {\r\n            columnDataArr.push({title:element[0],field:element[0]})\r\n          });\r\n        columnDataArr.pop();\r\n        return columnDataArr;  \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(dataTableObjects.length === 0){return;}\r\n        console.log(dataTableObjects)\r\n        setcolumnTableObjects(createColumnDataObj());   \r\n    },[dataTableObjects]);\r\n    \r\n    useEffect(() => {\r\n        if(columnTableObjects.length === 0){return;}\r\n\r\n       console.log(columnTableObjects);\r\n    },[columnTableObjects]) \r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(dataARRColumns.length === 0){return;}\r\n        var dataTableArr = [];\r\n        var TimeStepArr = [];\r\n        var count = 1;\r\n       \r\n        dataARRColumns[0][1].forEach(() => {\r\n            TimeStepArr.push(count*100);\r\n            count++\r\n        })\r\n        dataARRColumns.forEach((element)=>{\r\n            dataTableArr.push(createDataTableObj(element,TimeStepArr))\r\n\r\n        })\r\n        setDataTableObjects(dataTableArr);\r\n    },[dataARRColumns])\r\n\r\n\r\n    useEffect( () => {\r\n        if(Object.keys(dataColumns).length === 0){return;}  \r\n        readyData(dataColumns);\r\n          },[dataColumns]);\r\n\r\n\r\n          \r\n    \r\n    const readyData = (dataCS) =>{\r\n        var result = []\r\n        var ArrColumnKeyVals = [];\r\n        for(const dataC in dataCS){\r\n            ArrColumnKeyVals.push([dataC,dataCS[dataC]])\r\n        }  \r\n        ArrColumnKeyVals.forEach((element)=> {\r\n            result.push(makeTimeSteps(element));\r\n        }) \r\n       \r\n        setDataARRColumns(result);\r\n      };\r\n      \r\n      const makeTimeSteps =  (attribute) => {\r\n          var data =   [];\r\n          var result = [];\r\n          var count =  0;\r\n          result.push(attribute[0]);\r\n          attribute[1].forEach((el)=>{\r\n              if(count%100 === 0){\r\n                  data.push(el);\r\n                  };count++;\r\n          })\r\n          result.push(data);\r\n         \r\n          return result;\r\n      }\r\n\r\n    return (\r\n        <div style={{width:1000 ,height: 365}} className = \"DataTable\">\r\n            <MaterialTable title=\"Data Report\"  \r\n              data ={getData()}\r\n              columns ={getColumn()}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DataTable;","import React from \"react\";\r\n\r\n\r\n\r\n/* A Component which Infromation on each conglomerated Anomaly Report */\r\nconst Anomaly = ({ anomalyReport }) => {\r\n  return (\r\n    <div className=\"Anomaly\">\r\n      <h4>\r\n        {\"Description: \"}\r\n        {anomalyReport.description}\r\n      </h4>\r\n      <p>\r\n        {\"Start: \"}\r\n        {anomalyReport.anomalyStart}\r\n      </p>\r\n      <p>\r\n        {\"End: \"}\r\n        {anomalyReport.anomalyEnd}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Anomaly;\r\n","import React from 'react';\r\nimport Anomaly from './Anomaly'\r\n\r\n/* A Component which shows all Anomalies as a List*/\r\nconst  Anomalies = ({anomalyReports}) => {\r\n    return (\r\n        <div className=\"AnomalyList\">\r\n            {anomalyReports.map((anomalyReport,index)=>\r\n                <Anomaly key={index} anomalyReport= {anomalyReport} />)}              \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Anomalies;","\r\nimport './App.css';\r\nimport {useState,useEffect} from 'react'\r\nimport SubMaster from './components/SubMaster'\r\nimport {parse} from \"papaparse\"\r\nimport Dropdown from './components/Dropdown'\r\nimport DynamicChart from './components/DynamicChart'\r\nimport DataTable from './components/DataTable'\r\nimport Anomalies from  './components/Anomalies'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [models,setModels] = useState([]);\r\n\r\n  const [file,setFile] = useState([]);\r\n\r\n  const [dataPoints,setDataPoints] = useState({});\r\n\r\n  const [dataColumns,setDataColumns] = useState({});\r\n\r\n  const [displayGraphData,setDisplayGraphData] = useState([])\r\n\r\n  const [anomalyReports,setAnomalyReports] = useState([]);\r\n\r\n  const [showAnomalies,setShowAnomalies] = useState(false);\r\n\r\n  \r\n\r\n\r\n\r\n \r\n    \r\n  /* To Initalize all Data from BACKEND */ \r\n  useEffect( () => {\r\n  const getModels = async () => {\r\n    const modelsFromServer = await fetchModels();\r\n    setModels(modelsFromServer)\r\n  }\r\n  getModels();},[]);\r\n\r\n\r\n\r\n   /* To Initalize anomalyReports in useState */ \r\n  useEffect( () => {\r\n    if(anomalyReports.length === 0){return}\r\n    setShowAnomalies(true);\r\n  },[anomalyReports])\r\n\r\n   /* To initalize Data we received from file from user and parse into proper format*/ \r\n  useEffect( () => {\r\n  \r\n    parseByColumn(dataPoints);\r\n\r\n    },[dataPoints]);\r\n  \r\n  \r\n\r\n\r\n\r\n  /* To set for specific attribute to be displayed on graph as function of all other \r\n     datasets we parsed from file given from user */   \r\n\r\n  const addGraphData = (graphData) => {\r\n      setDisplayGraphData(graphData)\r\n  }\r\n\r\n\r\n  const closeA =  () =>{\r\n    console.log(\"closeA\")\r\n    setShowAnomalies(false);\r\n\r\n  }\r\n  \r\n \r\n\r\n   /* take datapoints which is object which contains key pair value where key \r\n      is data cloumn attribute and value is ij value in grid */ \r\n  const parseByColumn = (dataPoints) => {\r\n\r\n    var dataColumnArray = []; \r\n    if(Object.keys(dataPoints).length === 0){return;}\r\n    for(const item in dataPoints.data[0]){\r\n      dataColumnArray.push(item)    \r\n    }\r\n    const obj = dataColumnArray.reduce((o, key) => ({ ...o, [key]: []}), {})\r\n    dataPoints.data.forEach(element => {     \r\n      for(const item in element){\r\n        obj[item].push(element[item]);\r\n      }\r\n    });\r\n    setDataColumns(obj);\r\n  }\r\n\r\n   /* async function which return promise and gives me all models existing in the Backend */ \r\n\r\n  const fetchModels = async () => {\r\n    \r\n    const res = await fetch('/api/models');\r\n    const data = await res.json();\r\n    return data;\r\n  }\r\n\r\n   /* Add Model to the App  */ \r\n\r\n  const addModel =  (model) => {\r\n\r\n    model.train_data = dataColumns;\r\n    const options = {\r\n      method :'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json'},\r\n      body: JSON.stringify(model)    \r\n      }\r\n      fetch('/api/models/add',options)\r\n      setModels([...models,model]);\r\n      \r\n    }   \r\n    \r\n    \r\n\r\n  /* deletes front-end representation of Model, goes by ID */ \r\n  const delModel = (id) => {\r\n\r\n                                      \r\n    setModels(models.filter((model)=> model.id !== id));\r\n    delBack();\r\n   \r\n  }\r\n\r\n   /* Deletes backend representation Model, goes by ID */ \r\n  const delBack = async (id) => {\r\n    await fetch(`/api/models/delete/${id}`,{\r\n      method: 'DELETE'\r\n    });\r\n  }\r\n\r\n\r\n   /* Gets Model from Backend returns promise which can picked up by function and \r\n      unraveled */ \r\n  const getModel = async (id) => {\r\n    const res = await fetch(`/api/models/${id}`);\r\n    const data = await res.json();\r\n    return data;\r\n  }\r\n\r\n\r\n \r\n   /* Function which sends a file to the Backend as FormData */ \r\n  const sendFile = () => {\r\n\r\n    const formData = new FormData()\r\n    formData.append('myFile', file[0])\r\n    console.log(file[0]);\r\n    const options = {\r\n      method :'POST',\r\n      body: formData   \r\n      }\r\n      fetch('/api/file/add',options) \r\n    }\r\n\r\n\r\n   /* Adds file to the app and does first structureing of the data */   \r\n  const addFile = (file) => {\r\n    setFile(file)\r\n    const reader = new FileReader()\r\n    reader.readAsText(file[0]);\r\n    reader.onload = () => {\r\n      if (!!reader.result) {\r\n          setDataPoints(parse(reader.result,{header:true}));\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\n \r\n\r\n   /* checks whether in the Backend the model is ready and if so will update \r\n      the FrontEnd state accordingly  */ \r\n  const checkActiveModel = async (model) => {\r\n    const res =  await fetch(`/api/models/status/${model.id}`);\r\n    const data = await res.json();\r\n    return data \r\n                                  \r\n  }\r\n\r\n  \r\n   /* To take care of test when user gives test data fro a given model */ \r\n  const testModel = async (model) => {\r\n    model.predict_data = dataColumns;\r\n    const options = {\r\n      method :'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json'},\r\n      body: JSON.stringify(model)    \r\n      }\r\n      const res =  await fetch('/api/models/update',options);\r\n      const data = await res.json();\r\n      return data\r\n     \r\n  }\r\n\r\n\r\n   /* sets all Anomaly reports we got from App */ \r\n  const activateAnomalies = (anomalyArr) => {\r\n    setAnomalyReports(anomalyArr);\r\n  }\r\n  \r\n\r\n\r\n /* General components for APP */ \r\n  return (\r\n    <div className=\"App\">\r\n      <Dropdown dataColumns={dataColumns} addGraphData={addGraphData}/>\r\n      <DynamicChart displayGraphData = {displayGraphData} dataColumns={dataColumns}/>   \r\n      <DataTable dataColumns= {dataColumns}/>\r\n      <SubMaster models = {models} addModel = {addModel} addFile={addFile} testModel ={testModel} activateAnomalies ={activateAnomalies} closeA={closeA}/>\r\n      <div className=\"Anomlies\">\r\n        {showAnomalies && <Anomalies anomalyReports = {anomalyReports}/>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}